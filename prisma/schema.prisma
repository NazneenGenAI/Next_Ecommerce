generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(cuid())
  name        String
  price       Float
  description String
  category    String
  image       String
  stock       Int
  features    String[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String?
  lastName  String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("users")
}

model Order {
  id              String        @id @default(cuid())
  orderNumber     String        @unique
  status          OrderStatus   @default(PENDING)
  subtotal        Float
  shippingCost    Float         @default(0)
  tax             Float         @default(0)
  total           Float
  firstName       String
  lastName        String
  email           String
  phone           String
  address         String
  city            String
  zipCode         String
  country         String        @default("US")
  paymentMethod   String        @default("card")
  paymentStatus   PaymentStatus @default(PENDING)
  userId          String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  paymentIntentId String?
  orderItems      OrderItem[]
  user            User?         @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}
