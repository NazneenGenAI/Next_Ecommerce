// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  price       Float
  description String
  category    String
  image       String
  stock       Int
  features    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  orderItems  OrderItem[]

  @@map("products")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String?
  lastName  String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders    Order[]

  @@map("users")
}

model Order {
  id           String      @id @default(cuid())
  orderNumber  String      @unique
  status       OrderStatus @default(PENDING)
  
  // Totals
  subtotal     Float
  shippingCost Float       @default(0)
  tax          Float       @default(0)
  total        Float
  
  // Customer Info
  firstName    String
  lastName     String
  email        String
  phone        String
  address      String
  city         String
  zipCode      String
  country      String      @default("US")
  
  // Payment Info
  paymentMethod String     @default("card")
  paymentStatus PaymentStatus @default(PENDING)
  paymentIntentId String?  // Stripe Payment Intent ID
  
  // Optional user relation
  userId       String?
  user         User?      @relation(fields: [userId], references: [id])
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  orderItems   OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float // Price at time of order
  
  // Relations
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}